#umi data frame change
'mhk/Downloads/data'
getwd()
setwd('/home/singlecell1/mhk/Downloads/data')
library(dplyr)
data <- readRDS('UMI_matrix.rds')
umi <- data[,1:20000]
umi <- data.frame(umi)
write.table(umi,file='umi.txt',sep = ',',row.names = T)
umi_f <- read.delim('umi.txt',header=F, sep=',')
umi_f <- t(umi_f)
colnames(umi_f) <- umi_f[1,]
umi_f <- umi_f[-1,]
colnames(umi_f)[1] = 'Index'
final <- data.frame(umi_f)

#annotation data filtering
an <- read.delim('annotation.txt',header=T)
an_1 <- an$Index
an_2 <- an$Cell_type
an <- data.frame(an_1,an_2)
names(an) <- c('Index','Cell_type')

#umi, annotation data merge
pre <- merge(final,an,by='Index')

#fibroblast, epithelial, endothelial cell filtering
fibro <- pre %>% filter(Cell_type=='Fibroblasts')
fibro <- data.frame(fibro)
epit <- pre %>% filter(Cell_type=='Epithelial cells')
epit <- data.frame(epit)
endo <- pre %>% filter(Cell_type=='Endothelial cells')
endo <- data.frame(endo)

#fibroblast cell clustering
library(dplyr)
library(Seurat)
library(patchwork)

fib <- CreateSeuratObject(counts = fibro, project = "lung_fibroblasts", min.cells = 3, min.features = 200)
fib[["percent.mt"]] <- PercentageFeatureSet(fib, pattern = "^MT-")
VlnPlot(fib, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(fib, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(fib, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
fib <- subset(fib, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
fib <- NormalizeData(fib)
fib <- FindVariableFeatures(fib, selection.method = "vst", nfeatures = 2000)
plot1 <- VariableFeaturePlot(fib)
plot1
all.genes <- rownames(fib)
fib <- ScaleData(fib, features = all.genes)
fib <- RunPCA(fib, features = VariableFeatures(object = fib))
print(fib[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(fib, dims = 1:2, reduction = "pca")
DimPlot(fib, reduction = "pca")
DimHeatmap(fib, dims = 1, cells = 500, balanced = TRUE)
DimHeatmap(fib, dims = 1:15, cells = 500, balanced = TRUE)
fib <- JackStraw(fib, num.replicate = 100)
fib <- ScoreJackStraw(fib, dims = 1:20)
JackStrawPlot(fib, dims = 1:15)
ElbowPlot(fib)
fib <- FindNeighbors(fib, dims = 1:10)
fib <- FindClusters(fib, resolution = 0.5)
fib <- RunUMAP(fib, dims = 1:10)
DimPlot(fib, reduction = "umap")
saveRDS(fib, file = "/fibroblast.rds")
cluster2.markers <- FindMarkers(fib, ident.1 = 2, min.pct = 0.25)
cluster3.markers <- FindMarkers(fib, ident.1 = 3, ident.2 = c(0, 3), min.pct = 0.25)
fib.markers <- FindAllMarkers(fib, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
fib.markers %>% group_by(cluster) %>% top_n(n = 2, wt = avg_log2FC)
cluster0.markers <- FindMarkers(fib, ident.1 = 0, logfc.threshold = 0.25, test.use = "roc", only.pos = TRUE)
new.cluster.ids <- c("COL13A1+ martix FBs", 'COL14A1+ matrix FBs', 'Myofibroblasts', 'Smooth muscle cells')
names(new.cluster.ids) <- levels(fib)
fib <- RenameIdents(fib, new.cluster.ids)
DimPlot(fib, reduction = "umap", label = TRUE, pt.size = 0.5) + NoLegend()

#epithelial cell clustering
epit <- CreateSeuratObject(counts = epit, project = "lung_epit", min.cells = 3, min.features = 200)
epit[["percent.mt"]] <- PercentageFeatureSet(epit, pattern = "^MT-")
VlnPlot(epit, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(epit, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(epit, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
epit <- subset(epit, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
epit <- NormalizeData(epit, normalization.method = "LogNormalize", scale.factor = 10000)
epit <- FindVariableFeatures(epit, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(epit), 10)
plot1 <- VariableFeaturePlot(epit)
plot1
all.genes <- rownames(epit)
epit <- ScaleData(epit, features = all.genes)
epit <- RunPCA(epit, features = VariableFeatures(object = epit))
print(epit[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(epit, dims = 1:2, reduction = "pca")
DimPlot(epit, reduction = "pca")
DimHeatmap(epit, dims = 1, cells = 500, balanced = TRUE)
DimHeatmap(epit, dims = 1:15, cells = 500, balanced = TRUE)
epit <- JackStraw(epit, num.replicate = 100)
epit <- ScoreJackStraw(epit, dims = 1:20)
JackStrawPlot(epit, dims = 1:15)
ElbowPlot(epit)
epit <- FindNeighbors(epit, dims = 1:10)
epit <- FindClusters(epit, resolution = 0.3)
epit <- RunUMAP(epit, dims = 1:10)
DimPlot(epit, reduction = "umap")
cluster2.markers <- FindMarkers(epit, ident.1 = 2, min.pct = 0.25)
cluster4.markers <- FindMarkers(epit, ident.1 = 4, ident.2 = c(0, 3), min.pct = 0.25)
epit.markers <- FindAllMarkers(epit, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
epit.markers %>% group_by(cluster) %>% top_n(n = 2, wt = avg_log2FC)
cluster0.markers <- FindMarkers(epit, ident.1 = 0, logfc.threshold = 0.25, test.use = "roc", only.pos = TRUE)
new.cluster.ids <- c('Ciliated','Plumonary alveolar type1', 'Plumonary alveolar type2', 'Myofibroblasts', 'Smooth muscle cells')
names(new.cluster.ids) <- levels(fib)
fib <- RenameIdents(fib, new.cluster.ids)
DimPlot(fib, reduction = "umap", label = TRUE, pt.size = 0.5) + NoLegend()

#endothelial cell clustering
end <- CreateSeuratObject(counts = endo, project = "lung_endo", min.cells = 3, min.features = 100)
end[["percent.mt"]] <- PercentageFeatureSet(end, pattern = "^MT-")
VlnPlot(end, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(end, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(end, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
end <- subset(end, subset = nFeature_RNA > 100 & nFeature_RNA < 2500 & percent.mt < 5)
end <- NormalizeData(end, normalization.method = "LogNormalize", scale.factor = 10000)
end <- FindVariableFeatures(end, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(end), 10)
plot1 <- VariableFeaturePlot(end)
plot1
all.genes <- rownames(end)
end <- ScaleData(end, features = all.genes)
end <- RunPCA(end, features = VariableFeatures(object = end))
print(end[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(end, dims = 1:2, reduction = "pca")
DimPlot(end, reduction = "pca")
DimHeatmap(end, dims = 1, cells = 500, balanced = TRUE)
DimHeatmap(end, dims = 1:15, cells = 500, balanced = TRUE)
end <- JackStraw(end, num.replicate = 100)
end <- ScoreJackStraw(end, dims = 1:20)
JackStrawPlot(end, dims = 1:15)
ElbowPlot(end)
end <- FindNeighbors(end, dims = 1:10)
epit <- FindClusters(end, resolution = 0.3)
end <- RunUMAP(end, dims = 1:10)
DimPlot(end, reduction = "umap")
